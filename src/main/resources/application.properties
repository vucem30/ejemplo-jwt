spring.application.name=demo
spring.cloud.compatibility-verifier.enabled=false

server.port=9999

# Security token (JWT) lasts in minutes (720 = 12 horas)
security.token.lasts=720

# Milisegundos que vive el token de seguridad
register.token.lasts=600000

# Secret for goole recaptcha
google.recaptcha.secret=ENC(iWsGWSOHa0r6EdCKoLMc6y7z8L2xeGkNljvsd6Tr18F49Ccn3R2nw7HeHLnOcwRogqnkd7BtMic=)

# Activate o deactivate Swagger (by default: NOT activated)
springdoc.api-docs.enabled=true

# General values for jasypt. DO NOT Change
jasypt.encryptor.algorithm=PBEWithMD5AndDES
jasypt.encryptor.iv-generator-classname=org.jasypt.iv.NoIvGenerator

# This will be temporary here. USE THE FIRST ONE IN PROD 
jasypt.encryptor.password=password

#jwt.encryptor.password=${JWT_KEY_PHRASE:password}
jwt.encryptor.password=ENC(mpupVp3+iulU1PvB/2H7o4IFYnWq6Yhk)



# LOG CONFIGURATION SECTION **************************************

# nombre del archivo en el que se va a guardar el log de transacciones
logging.file.name=log/v30.log
logging.log4j2.rolling.file-name=log/v30.log
logging.log4j2.rolling.file-pattern=log/v30-%d{yyyy-MM-dd}.log.gz
logging.level.com.zaxxer.hikari=OFF

# Logging level
logging.level.root=INFO

# Pattern for log messages
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n

# Rolling policy configuration
logging.log4j2.rolling.policy.type=TimeBasedTriggeringPolicy
logging.log4j2.rolling.policy.interval=1
logging.log4j2.rolling.policy.modulate=true
logging.log4j2.rolling.strategy.type=DefaultRolloverStrategy
logging.log4j2.rolling.strategy.max=7

# Delete logs after some time
logging.log4j2.rolling.strategy.delete.action.type=Delete
logging.log4j2.rolling.strategy.delete.action.basePath=log
logging.log4j2.rolling.strategy.delete.action.maxAge=3D




# Configuración para la conexión hacia la base de datos
spring.datasource.url=jdbc:postgresql://localhost:15432/v30
spring.datasource.username=postgres
spring.datasource.password=ENC(Hy7+MKKg8ozcrf7n3hLn38M9zSItZDzi)

# Las conexiones que están inactivas por más tiempo que el configurado en idle-timeout (30 minutos en esta configuración) serán cerradas, 
# pero HikariCP siempre mantendrá al menos minimum-idle conexiones en el pool:
spring.datasource.hikari.minimum-idle=7
spring.datasource.hikari.maximum-pool-size=37
spring.datasource.hikari.connection-timeout=10000
spring.datasource.hikari.idle-timeout=1800000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.register-mbeans=true